# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main, develop, feature/autenticacao, feature/telaInicial, master ]
    tags:
      - v1             # Push events to v1 tag        
      - v1.*           # Push events to v1.0, v1.1, and v1.9 tags 
  pull_request:
    branches: [ main, develop ]
    tags:
      - v1             # Push events to v1 tag        
      - v1.*           # Push events to v1.0, v1.1, and v1.9 tags

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - uses: actions/cache@v1
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-key: |
            ${{ runner.os}}-yarn-
              
      # - name: Intall deps, build and test          
      - run: yarn --frozen-lockfile
        working-directory: ./frontend

      - run: yarn test
        working-directory: ./frontend

      - run: yarn test --coverage
        working-directory: ./frontend
        env: 
          CI: true
          # MY_VAR: Hi there! My name is
          # FIRST_NAME: Mona
          # MIDDLE_NAME: The
          # LAST_NAME: Octocat
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: My first step
  #     uses: docker://node:13.12.0-alpine
  #   # - uses: actions/checkout@v2
  #   - name: install Node.js 
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 12.x
  #       # name: my-artifact-for-30-days
  #       # path: artifact/path
  #       # expiration: 30d # '30days' or '30 days' would also work
  #   - run: yarn
  #     working-directory: ./frontend
  #   - run: yarn test
  #     working-directory: ./frontend
  #   - run: yarn test --coverage
  #     working-directory: ./frontend
  #     env: 
  #       CI: true
    
